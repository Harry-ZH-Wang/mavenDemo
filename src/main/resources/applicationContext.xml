<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task-3.0.xsd
						http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- 开启自动扫描机制 -->
	<context:component-scan base-package="com"></context:component-scan>
	<!-- <context:property-placeholder location="classpath:mysql.properties"/> -->
	<!-- 配置数据库连接池 -->


	<!-- 商业数据源 c3p0, apache提供的DBCP -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:oracle"></property>
		<property name="user" value="system"></property>
		<property name="password" value="Password"></property>
		<property name="initialPoolSize" value="15"></property><!-- 初始化连接数的数量 -->
		<property name="minPoolSize" value="15"></property>
		<property name="maxPoolSize" value="100"></property>
		<property name="acquireIncrement" value="5"></property>
		<property name="maxStatements" value="200"></property>
		<property name="maxIdleTime" value="200"></property><!-- 超时时间 -->
		<property name="checkoutTimeout" value="2000"></property><!-- 多长时间回收一次超时连接 -->
	</bean>

	<!-- SessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 如果有多包需要取类别名的话,使用,或;分割 -->
		<property name="typeAliasesPackage" value="com.lovo.beans"></property>
	</bean>

	<!-- 将Session与Mapper直接进行关联 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lovo.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="txManage"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<!-- session实例化 -->

	<!-- 声明事物 -->
	<tx:advice id="txAdvice" transaction-manager="txManage">
		<tx:attributes>
			<tx:method name="*" read-only="true"></tx:method>
			<tx:method name="add*" read-only="false" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception"></tx:method>
			<tx:method name="save*" read-only="false" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception"></tx:method>
			<tx:method name="insert*" read-only="false" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception"></tx:method>

			<tx:method name="update*" read-only="false" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception"></tx:method>
			<tx:method name="modify*" read-only="false" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception"></tx:method>
			<tx:method name="change*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" isolation="REPEATABLE_READ"></tx:method>

			<tx:method name="delete*" read-only="false" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception"></tx:method>
			<tx:method name="remove*" read-only="false" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception"></tx:method>
			<!-- 添加了一个删除方法的命名 -->
			<tx:method name="del*" read-only="false" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception"></tx:method>

			<tx:method name="select*" read-only="true" propagation="SUPPORTS"></tx:method>
			<tx:method name="find*" read-only="true" propagation="SUPPORTS"></tx:method>
			<tx:method name="get*" read-only="true" propagation="SUPPORTS"></tx:method>


		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceMethods"
			expression="execution(* com.lovo.service.impl.*.*(..))"></aop:pointcut>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"></aop:advisor>
	</aop:config>

	<!-- 配置transactionTemplate -->  
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">  
    	<property name="transactionManager" ref="txManage"></property>  
    	<!--定义事务隔离级别,-1表示使用数据库默认级别-->  
    	<property name="readOnly" value="false"></property>  
    	<property name="isolationLevelName" value="ISOLATION_DEFAULT"></property>  
    	<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"></property>  
	</bean>  

	<!-- 开启切面功能 -->
	<aop:aspectj-autoproxy />

	<!--CXF配置 -->
	<import resource="classpath:META-INF/cxf/cxf.xml"/>
	<import resource="classpath:/cxf-beans.xml"/>
	
</beans>